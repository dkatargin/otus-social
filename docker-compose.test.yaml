version: '3.8'

services:
  postgres-master:
    image: postgres:15
    environment:
      POSTGRES_DB: social_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5440:5432"
#    volumes:
#      - ./etc/schema.sql:/docker-entrypoint-initdb.d/01-init.sql
    tmpfs:
      - /var/lib/postgresql/data
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d social_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    tmpfs:
      - /data
    command: redis-server --save "" --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq-test:
    image: rabbitmq:3-management-alpine
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    tmpfs:
      - /var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

  app-test:
    build:
      context: src
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres-master
      - DB_PORT=5432
      - DB_USER=test_user
      - DB_PASSWORD=test_password
      - DB_NAME=social_test
      - REDIS_HOST=redis-test
      - REDIS_PORT=6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq-test:5672/
      - APP_ENV=test
    depends_on:
      postgres-master:
        condition: service_healthy
      redis-test:
        condition: service_healthy
      rabbitmq-test:
        condition: service_healthy
    volumes:
      - ./etc/app_test.yaml:/app/config.yaml:ro
    ports:
      - "8080:8080"
    command: tail -f /dev/null  # Keep container running for tests